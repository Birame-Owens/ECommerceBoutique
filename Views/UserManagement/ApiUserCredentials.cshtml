@model List<ECommerceBoutique.Models.Entities.User>
@using Microsoft.AspNetCore.Identity
@using ECommerceBoutique.Models.Entities
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Identifiants des utilisateurs API";
}

<div class="container mt-4">
    <h1>Identifiants des utilisateurs API</h1>

    <div class="alert alert-info">
        <h4>Information pour les tests</h4>
        <p>Cette page affiche les identifiants des utilisateurs importés depuis l'API DummyJSON pour faciliter les tests.</p>
        <p>Utilisez ces identifiants pour vous connecter et tester les différentes fonctionnalités de l'application.</p>
    </div>

    @if (Model.Count == 0)
    {
        <div class="alert alert-warning">
            <h5>Aucun utilisateur API n'a été importé</h5>
            <p>Veuillez d'abord importer des utilisateurs depuis l'API DummyJSON.</p>
            <form asp-action="ImportApiUsers" method="post">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-primary">Importer des utilisateurs depuis l'API</button>
            </form>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h3>Liste des utilisateurs API (@Model.Count)</h3>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Nom d'utilisateur</th>
                                <th>Email</th>
                                <th>Mot de passe</th>
                                <th>Nom complet</th>
                                <th>Rôles</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td>@user.UserName</td>
                                    <td><code>@user.Email</code></td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(user.OriginalApiPassword))
                                        {
                                            <code>@user.OriginalApiPassword</code>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Mot de passe non disponible</span>
                                        }
                                    </td>
                                    <td>@user.FirstName @user.LastName</td>
                                    <td>
                                        @{
                                            var roles = await UserManager.GetRolesAsync(user);

                                            foreach (var role in roles)
                                            {
                                                var badgeClass = role == "Administrator" ? "bg-danger" :
                                                (role == "Vendor" ? "bg-success" : "bg-info");
                                                <span class="badge @badgeClass me-1">@role</span>
                                            }
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="mt-3">
            <form asp-action="ImportApiUsers" method="post" class="d-inline me-2">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-success">Importer plus d'utilisateurs</button>
            </form>

            <form asp-action="DeleteApiUsers" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <button type="submit" class="btn btn-danger" onclick="return confirm('Êtes-vous sûr de vouloir supprimer tous les utilisateurs API?');">
                    Supprimer tous les utilisateurs API
                </button>
            </form>
        </div>
    }

    <div class="mt-3">
        <a asp-action="Index" class="btn btn-secondary">Retour à la gestion des utilisateurs</a>
    </div>
</div>