@model IEnumerable<ECommerceBoutique.Models.Entities.User>
@using Microsoft.AspNetCore.Identity
@using ECommerceBoutique.Models.Entities
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Utilisateurs API";
}

<div class="container mt-4">
    <h1>Utilisateurs API pour tests</h1>

    <div class="alert alert-info">
        <h4 class="alert-heading">Information pour les tests</h4>
        <p>Cette page liste tous les utilisateurs importés depuis l'API DummyJSON avec leurs informations d'identification pour faciliter les tests.</p>
        <p>Vous pouvez utiliser ces identifiants pour vous connecter ou cliquer sur "Se connecter" pour vous connecter instantanément en tant que cet utilisateur.</p>
    </div>

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-warning">
            <h5>Aucun utilisateur API disponible</h5>
            <p>Il semble qu'aucun utilisateur API n'ait été importé. Vous pouvez importer des utilisateurs depuis la page de gestion des utilisateurs.</p>
            <a asp-controller="UserManagement" asp-action="Index" class="btn btn-primary">Aller à la gestion des utilisateurs</a>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h4>Liste des utilisateurs API (@Model.Count())</h4>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>Nom d'utilisateur</th>
                                <th>Email</th>
                                <th>Mot de passe</th>
                                <th>Nom</th>
                                <th>Rôles</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model)
                            {
                                <tr>
                                    <td>@user.UserName</td>
                                    <td><code>@user.Email</code></td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(user.OriginalApiPassword))
                                        {
                                            <code>@user.OriginalApiPassword</code>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Non disponible</span>
                                        }
                                    </td>
                                    <td>@(user.FirstName ?? "") @(user.LastName ?? "")</td>
                                    <td>
                                        @{
                                            // Vérification de nullité pour éviter CS8602
                                            if (user != null && UserManager != null)
                                            {
                                                var roles = await UserManager.GetRolesAsync(user);

                                                foreach (var role in roles)
                                                {
                                                    var badgeClass = role == "Administrator" ? "bg-danger" :
                                                    (role == "Vendor" ? "bg-success" : "bg-info");
                                                    <span class="badge @badgeClass me-1">@role</span>
                                                }
                                            }
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <a asp-action="LoginAsUser" asp-route-id="@user.Id" class="btn btn-sm btn-primary">
                                                <i class="bi bi-box-arrow-in-right"></i> Se connecter
                                            </a>
                                            <button type="button" class="btn btn-sm btn-info ms-1"
                                                    onclick="copyCredentials('@user.Email', '@(user.OriginalApiPassword ?? "")')">
                                                <i class="bi bi-clipboard"></i> Copier
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }

    <div class="mt-3">
        <a asp-controller="UserManagement" asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Retour à la gestion des utilisateurs
        </a>
    </div>
</div>

@section Scripts {
    <script>
        function copyCredentials(email, password) {
            const text = `Email: ${email}\nMot de passe: ${password}`;
            navigator.clipboard.writeText(text)
                .then(() => {
                    alert('Identifiants copiés dans le presse-papiers');
                })
                .catch(err => {
                    console.error('Erreur lors de la copie: ', err);
                });
        }
    </script>
}